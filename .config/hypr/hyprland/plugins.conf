# exec = export SLURP_ARGS='-d -c D6E3FFBB -b 36476444 -s 00000000'

general {
    col.active_border = rgba(DBE3ED39)
    col.inactive_border = rgba(87929D30)
}

misc {
    background_color = rgba(0C141BFF)
}

plugin {
    hyprbars {
        # Honestly idk if it works like css, but well, why not
        bar_text_font = Rubik, Geist, AR One Sans, Reddit Sans, Inter, Roboto, Ubuntu, Noto Sans, sans-serif
        bar_height = 30
        bar_padding = 10
        bar_button_padding = 5
        bar_precedence_over_border = true
        bar_part_of_window = true

        bar_color = rgba(0C141BFF)
        col.text = rgba(DBE3EDFF)

        # example buttons (R -> L)
        # hyprbars-button = color, size, on-click
        hyprbars-button = rgb(DBE3ED), 13, 󰖭, hyprctl dispatch killactive
        hyprbars-button = rgb(DBE3ED), 13, 󰖯, hyprctl dispatch fullscreen 1
        hyprbars-button = rgb(DBE3ED), 13, 󰖰, hyprctl dispatch movetoworkspacesilent special
    }

    hy3 {
    # disable gaps when only one window is onscreen
    # 0 - always show gaps
    # 1 - hide gaps with a single window onscreen
    # 2 - 1 but also show the window border
    no_gaps_when_only = 1 # default: 0

    # policy controlling what happens when a node is removed from a group,
    # leaving only a group
    # 0 = remove the nested group
    # 1 = keep the nested group
    # 2 = keep the nested group only if its parent is a tab group
    node_collapse_policy = 2 # default: 2

    # offset from group split direction when only one window is in a group
    group_inset = 10 # default: 10

    # if a tab group will automatically be created for the first window spawned in a workspace
    tab_first_window = false

    tabs {
        text_center = true
        text_font = Rubik, Geist, AR One Sans, Reddit Sans, Inter, Roboto, Ubuntu, Noto Sans, sans-serif
    }

    # autotiling settings
    autotile {
      # enable autotile
      enable = true # default: false

      # make autotile-created groups ephemeral
      ephemeral_groups = true # default: true

      # if a window would be squished smaller than this width, a vertical split will be created
      # -1 = never automatically split vertically
      # 0 = always automatically split vertically
      # <number> = pixel height to split at
      trigger_width = 0 # default: 0

      # if a window would be squished smaller than this height, a horizontal split will be created
      # -1 = never automatically split horizontally
      # 0 = always automatically split horizontally
      # <number> = pixel height to split at
      trigger_height = 0 # default: 0

      # a space or comma separated list of workspace ids where autotile should be enabled
      # it's possible to create an exception rule by prefixing the definition with "not:"
      # workspaces = 1,2 # autotiling will only be enabled on workspaces 1 and 2
      # workspaces = not:1,2 # autotiling will be enabled on all workspaces except 1 and 2
      workspaces = all # default: all
    }
  }
}

windowrulev2 = bordercolor rgba(90CDFFAA) rgba(90CDFF77),pinned:1
